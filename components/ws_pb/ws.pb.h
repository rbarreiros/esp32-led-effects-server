/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Sun Dec 24 22:44:36 2017. */

#ifndef PB_WS_PB_H_INCLUDED
#define PB_WS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(64) SetDisplay_dots_t;
typedef struct _SetDisplay {
    uint32_t n_horiz;
    SetDisplay_dots_t dots;
/* @@protoc_insertion_point(struct:SetDisplay) */
} SetDisplay;

typedef struct _DotCommand {
    pb_size_t which_command;
    union {
        SetDisplay set_display;
    } command;
/* @@protoc_insertion_point(struct:DotCommand) */
} DotCommand;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SetDisplay_init_default                  {0, {0, {0}}}
#define DotCommand_init_default                  {0, {SetDisplay_init_default}}
#define SetDisplay_init_zero                     {0, {0, {0}}}
#define DotCommand_init_zero                     {0, {SetDisplay_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define SetDisplay_n_horiz_tag                   1
#define SetDisplay_dots_tag                      2
#define DotCommand_set_display_tag               1

/* Struct field encoding specification for nanopb */
extern const pb_field_t SetDisplay_fields[3];
extern const pb_field_t DotCommand_fields[2];

/* Maximum encoded size of messages (where known) */
#define SetDisplay_size                          72
#define DotCommand_size                          74

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define WS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
